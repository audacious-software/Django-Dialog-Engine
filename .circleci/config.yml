version: 2.1

orbs:
  python: circleci/python@1.2
  node: circleci/node@4.7.0

workflows:
  build:
    jobs:
      - build-38
      - build-27

jobs:
  build-38:
    docker:
      - image: cimg/python:3.8
      - image: circleci/postgres:9.6.9-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - node/install
      - node/install-npm
      - checkout
      - restore_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project django_dialog_engine
            mkdir django
            cd django
            django-admin.py startproject dde
            mv ../django_dialog_engine dde
            cd dde
            cp django_dialog_engine/circle_settings.py dde/settings.py
            cp django_dialog_engine/circle_urls.py dde/urls.py
            python manage.py migrate
            python manage.py test
            cp django_dialog_engine/.pylintrc .
            pylint django_dialog_engine
            bandit -r .
      - run:
          name: Test dialogs (Botium)
          command: |
            cd ..
            cd django/dde
            pwd
            ls
            npm install -g botium-cli botium-core
            export BOTIUM_JSON_PATH="./django_dialog_engine/botium/botium.json"
            export BOTIUM_DDE_DIALOG_SCRIPT_PATH="./django_dialog_engine/botium/dialog_scripts/prompt_test.json"
            export BOTIUM_DDE_DIALOG_USER_ID="circle-ci:tester"
            export BOTIUM_DDE_DIALOG_ID="circle-ci-test"
            botium-cli -c $BOTIUM_JSON_PATH -C django_dialog_engine/botium/convos/prompt_test/ run
      - save_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "/home/circleci/django/dde/django_dialog_engine/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-27:
    docker:
      - image: cimg/python:2.7
      - image: circleci/postgres:9.6.9-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - node/install-npm
      - restore_cache:
          key: venv-27-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            sudo apt-get update && sudo apt-get install -y gdal-bin
            virtualenv /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project django_dialog_engine
            mkdir django
            cd django
            django-admin.py startproject dde
            mv ../django_dialog_engine dde
            cd dde
            cp django_dialog_engine/circle_settings.py dde/settings.py
            cp django_dialog_engine/circle_urls.py dde/urls.py
            python manage.py migrate
            python manage.py test
            cp django_dialog_engine/.pylintrc .
            pylint django_dialog_engine
            bandit -r .
      - save_cache:
          key: venv-27-{{ .Branch }}-{{ checksum "/home/circleci/django/dde/django_dialog_engine/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app
